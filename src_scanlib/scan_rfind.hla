unit scan_rfind_unit;

	#includeonce ("hide/hidefunc.hhf")
	#includeonce ("strings.hhf")
	#includeonce ("excepts.hhf")

	?@nodisplay := true;
	?@noalignstack := true;

	proc
		
		scan.rfind		:procedure( bof:dword; toFind:string );

			// source = ESI
			// searches to find string "toFind"
			// bof is the address of the start of source
			// returns carry = true for success
			//			ESI = pointer to start of found string in source
			//			EDI = pointer to end of found string in source
			// returns carry = false for failure
			//				ESI unchanged, EDI undefined
			
			var
				saveEAX	:dword;
				saveEBX	:dword;
				saveECX	:dword;
				startESI:dword;

		begin rfind;
			
			push( ebp );
			mov( esp, ebp );
			sub( _vars_, esp );
			
			mov( eax, saveEAX );
			mov( ebx, saveEBX );
			mov( ecx, saveECX );
			
			mov( toFind, edi );
			test( edi, edi );
			jz radn;
			
			mov( (type str.strRec[edi]).length, ecx );
			test( ecx, ecx );
			jz returnFalse;

			mov( esi, startESI );
			sub( ecx, esi );  // first search must be at least here
			
			mov( [edi], ah ); // for quick 1 char checks
			add( 1, esi );
			scan:
				sub( 1, esi );
				cmp( esi, bof );
				jb returnFalse;
				mov( [esi], al );
				test( al, al );
				jz returnFalse;
				cmp( al, ah );
				jne scan;
				mov( esi, ebx );	// save start index here
				mov( (type str.strRec[edi]).length, ecx );
				repe.cmpsb();
				je returnTrue;
				mov( toFind, edi );
				mov( ebx, esi );
				jmp scan;
			
			returnTrue:
				// edi = pointer to just beyond end of found string
				mov( esi, edi );
				// esi = pointer to start of found string
				mov( ebx, esi );
				stc();	// carry = true
				jmp done;
			
			returnFalse:
				mov( startESI, esi );
				clc();
				
			done:
				mov( saveEAX, eax );
				mov( saveECX, ecx );
				mov( saveEBX, ebx );
				
				mov( ebp, esp );
				pop( ebp );
				ret( _parms_ );
				
			radn:
				raise( ex.AttemptToDerefNULL );

			
		end rfind;

		
end scan_rfind_unit;
